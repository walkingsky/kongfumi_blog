<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>静态博客工具</title>
      <link href="/2022/02/12/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B7%A5%E5%85%B7/"/>
      <url>/2022/02/12/%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h4 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h4><p>官方主页：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>基于nodejs，部分主题对nodejs版本要求比较高，安装包升级包容易出现兼容性问题；</p><p><u><strong>最大的问题就是编译速度太慢了</strong></u>。超过1W的文件量，windows底下就直接报“too many open files”错误，在linux下编译也是小时级别的，无法忍受。</p><p>找到的合适的主题：<a href="https://github.com/blinkfox/hexo-theme-matery">https://github.com/blinkfox/hexo-theme-matery</a></p><p>本地实施目录： F:\study\js\hexo_html  临时对比目录 F:\study\js\hexo2htm<strong>l</strong></p><p><strong>关于配置文件</strong></p><p>根目录的配置文件和主题目录的配置文件一同生效，并且如果有相同配置，是以主题目录的配置为主的。这点试了好多次才发现的规律</p><p><strong>遇到的问题</strong>：文件明太长，git无法cp文件，（windows文件名有255的长度限制）</p><p>报错信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unable to stat “xxxxxxxxxxxxxxxxxxx/index.html” Filename too long</span><br></pre></td></tr></table></figure><p>解决方法：<a href="https://confluence.atlassian.com/bamkb/git-checkouts-fail-on-windows-with-filename-too-long-error-unable-to-create-file-errors-867363792.html">https://confluence.atlassian.com/bamkb/git-checkouts-fail-on-windows-with-filename-too-long-error-unable-to-create-file-errors-867363792.html</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --system core.longpaths true</span><br><span class="line">git config --global core.longpaths true</span><br></pre></td></tr></table></figure><h4 id="hugo"><a href="#hugo" class="headerlink" title="hugo"></a>hugo</h4><p>官网文档：<a href="https://gohugo.io/getting-started/quick-start/">https://gohugo.io/getting-started/quick-start/</a></p><p>合适的主题：<a href="https://themes.gohugo.io/themes/parsa-hugo/">https://themes.gohugo.io/themes/parsa-hugo/</a></p><ul><li>另一个参考的主题：<a href="https://themes.gohugo.io/themes/hugo-theme-dream/">https://themes.gohugo.io/themes/hugo-theme-dream/</a></li></ul><p>本地实施并修改的目录：F:\study\js\hexo_html\themes\hexo-theme-matery</p>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> 静态网站 </tag>
            
            <tag> hugo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nodejs升级</title>
      <link href="/2022/02/10/nodejs%E5%8D%87%E7%BA%A7/"/>
      <url>/2022/02/10/nodejs%E5%8D%87%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[<h4 id="windows下的升级"><a href="#windows下的升级" class="headerlink" title="windows下的升级"></a>windows下的升级</h4><p><strong>n模块不支持windows平台，所以一般的升级方法是直接到nodejs官网下载对应的版本进行安装</strong></p><h4 id="Linux平台下的升级"><a href="#Linux平台下的升级" class="headerlink" title="Linux平台下的升级"></a>Linux平台下的升级</h4><p><strong>更新升级node版本的方法如下：</strong></p><p>1）首先：查看当前node版本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node –v</span><br></pre></td></tr></table></figure><p>2）安装n模块：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g n</span><br></pre></td></tr></table></figure><p>3）升级到指定版本/最新版本（该步骤可能需要花费一些时间）升级之前，可以执行n ls （查看可升级的版本）<br>如：<code>n v6.9.1</code></p><p>或者你也可以告诉管理器，安装最新的稳定版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n stable</span><br></pre></td></tr></table></figure><p>或者升级到最新版</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">n latest</span><br></pre></td></tr></table></figure><p>4）安装完成后，查看Node的版本，检查升级是否成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure><p>注：如果得到的版本信息不正确，你可能需要重启机器</p>]]></content>
      
      
      
        <tags>
            
            <tag> nodejs </tag>
            
            <tag> npm </tag>
            
            <tag> 升级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>技术回收站</title>
      <link href="/2022/02/09/%E6%8A%80%E6%9C%AF%E5%9B%9E%E6%94%B6%E7%AB%99/"/>
      <url>/2022/02/09/%E6%8A%80%E6%9C%AF%E5%9B%9E%E6%94%B6%E7%AB%99/</url>
      
        <content type="html"><![CDATA[<h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><ol><li>webhook 是啥？？</li><li>PHP 闭包函数</li><li>laravel的配置，可以动态使用吗？ </li><li>npm 命令使用 ，yarn 命令使用</li></ol><h4 id="经验"><a href="#经验" class="headerlink" title="经验"></a>经验</h4><ul><li><h6 id="PHP中的PSR规范-https-www-jianshu-com-p-b33155c15343"><a href="#PHP中的PSR规范-https-www-jianshu-com-p-b33155c15343" class="headerlink" title="PHP中的PSR规范 https://www.jianshu.com/p/b33155c15343"></a>PHP中的PSR规范 <a href="https://www.jianshu.com/p/b33155c15343">https://www.jianshu.com/p/b33155c15343</a></h6></li><li><p>centos7 8 ，的firewall-cmd 命令配置防火墙。 详细介绍文档 <a href="https://wangchujiang.com/linux-command/c/firewall-cmd.html">https://wangchujiang.com/linux-command/c/firewall-cmd.html</a>  <a href="https://www.cnblogs.com/Raodi/p/11625487.html">https://www.cnblogs.com/Raodi/p/11625487.html</a></p></li><li><p>四种解决Nginx出现403 forbidden 报错的方法 <a href="https://www.linuxprobe.com/nginx-403-forbidden.html">https://www.linuxprobe.com/nginx-403-forbidden.html</a></p></li><li><p>linux 创建虚拟内存文件 swapfile 加大内存 <a href="https://blog.csdn.net/liuwei000000/article/details/68953091">https://blog.csdn.net/liuwei000000/article/details/68953091</a></p></li><li><p>php curl 出现<code>cURL error 60: SSL certificate problem: unable to get local issuer certificate (see https://curl.haxx.se/libcurl/c/libcurl-errors.html)</code>报错的处理方式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">查询问题：SSL CA证书配置缺失导致。</span><br><span class="line"></span><br><span class="line">1、从CURL 官网下载CA 证书（cacert.pem）</span><br><span class="line"></span><br><span class="line">　　可 选择下载：https://curl.haxx.se/docs/caextract.html</span><br><span class="line"></span><br><span class="line">　　或 直接下载：https://curl.haxx.se/ca/cacert.pem</span><br><span class="line"></span><br><span class="line">2、找到 phpstudy 安装路径，对应php版本包</span><br><span class="line"></span><br><span class="line">　　例 安装路径下 php包：F:\phpstudy_pro\Extensions\php\php7.3.4nts\</span><br><span class="line"></span><br><span class="line">　　将下载的cacert.pem文件，放入 \extras\ssl\ 文件夹下</span><br><span class="line"></span><br><span class="line">3、修改配置 php.ini 文件</span><br><span class="line"></span><br><span class="line">　　启用openssl, curl扩展</span><br><span class="line"></span><br><span class="line">extension=curl</span><br><span class="line">extension=openssl</span><br><span class="line">　　配置CA 证书存放位置</span><br></pre></td></tr></table></figure></li><li><p>frps 内网穿透 <a href="https://post.smzdm.com/p/566063/">https://post.smzdm.com/p/566063/</a></p></li><li><p>mysql 安装后从新初始化密码 <a href="https://www.cnblogs.com/williamjie/p/11126486.html">https://www.cnblogs.com/williamjie/p/11126486.html</a></p></li><li><p>深入剖析 Laravel 服务提供者实现原理 <a href="https://learnku.com/articles/12986/in-depth-analysis-of-the-principle-of-laravel-service-provider-implementation">https://learnku.com/articles/12986/in-depth-analysis-of-the-principle-of-laravel-service-provider-implementation</a></p></li><li><p>微信小程序工具集（偏前端） <a href="https://github.com/justjavac/awesome-wechat-weapp">https://github.com/justjavac/awesome-wechat-weapp</a></p></li><li><p>phpstrom 的激活码 <a href="https://gist.github.com/imgVOID/57d05edbc09a2d0416879cbd44d52c02">https://gist.github.com/imgVOID/57d05edbc09a2d0416879cbd44d52c02</a></p></li><li><p>laravel make 生成时可以指定路径。 比如 <code>php artisan make:model Models/Log/DecryptLog</code>  <code> php artisan make:controller Api/DecryptLogController</code></p></li><li><p>接口类（<strong>interface</strong> - <strong>implements</strong> ），抽象类（<strong>abstract</strong>）、<strong>trait</strong> 的定义</p></li><li><p><strong>web-worker</strong> js的多线程实现</p></li><li><p>在线知识管理系统 <a href="https://zhuanlan.zhihu.com/p/134127874">https://zhuanlan.zhihu.com/p/134127874</a> </p></li><li><p>前端跨域详细讲解 <a href="https://segmentfault.com/a/1190000012469713">https://segmentfault.com/a/1190000012469713</a></p></li><li><p>laravel+vue项目前后端分离CSRF_TOKEN设置  <a href="https://www.codenong.com/cs106247005/">https://www.codenong.com/cs106247005/</a></p></li><li><p>东方财富的基金数据获取接口 <a href="https://fundmobapi.eastmoney.com/FundMNewApi/FundMNFInfo?pageIndex=1&amp;pageSize=500&amp;appType=ttjj&amp;plat=Android&amp;product=EFund&amp;Version=1&amp;deviceid=4252d0ac69bb50&amp;Fcodes=006751,006752">https://fundmobapi.eastmoney.com/FundMNewApi/FundMNFInfo?pageIndex=1&amp;pageSize=500&amp;appType=ttjj&amp;plat=Android&amp;product=EFund&amp;Version=1&amp;deviceid=4252d0ac69bb50&amp;Fcodes=006751,006752</a></p></li><li><p>东方财富基金历史数据获取接口 <a href="http://fund.eastmoney.com/f10/F10DataApi.aspx?type=lsjz&amp;code=005176&amp;page=1&amp;per=49">http://fund.eastmoney.com/f10/F10DataApi.aspx?type=lsjz&amp;code=005176&amp;page=1&amp;per=49</a></p></li><li><p>ssh 建立mysql的隧道   ssh -i /D/work/id_dsa_1024 -2 -x -N -L 13306:10.0.232.165:3306 <a href="mailto:&#x74;&#97;&#x6e;&#103;&#120;&#117;&#110;&#x69;&#110;&#x67;&#x40;&#52;&#x37;&#x2e;&#57;&#x39;&#x2e;&#49;&#57;&#54;&#x2e;&#x31;&#56;&#x35;">&#x74;&#97;&#x6e;&#103;&#120;&#117;&#110;&#x69;&#110;&#x67;&#x40;&#52;&#x37;&#x2e;&#57;&#x39;&#x2e;&#49;&#57;&#54;&#x2e;&#x31;&#56;&#x35;</a></p></li><li><p>markdown 生成html 静态页面  <a href="https://www.wanghuiblog.com/post/static-webiste-generator/">https://www.wanghuiblog.com/post/static-webiste-generator/</a></p></li><li><p>Hoverfly  服务虚拟化工具 ，可以用来做复杂的api接口测试</p></li><li><p>df datafame 数据合并拼接 <a href="https://blog.csdn.net/qq_41853758/article/details/83280104">https://blog.csdn.net/qq_41853758/article/details/83280104</a></p></li><li><p>cloudflare 功能强大的dns网站，可以做pages，web-worker，以及域名ssl加密的免费服务</p></li><li></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux斐讯</title>
      <link href="/2022/02/09/linux%E6%96%90%E8%AE%AF/"/>
      <url>/2022/02/09/linux%E6%96%90%E8%AE%AF/</url>
      
        <content type="html"><![CDATA[<h5 id="斐讯N1-盒子，armbian-linux-链接蓝牙"><a href="#斐讯N1-盒子，armbian-linux-链接蓝牙" class="headerlink" title="斐讯N1 盒子，armbian linux 链接蓝牙"></a>斐讯N1 盒子，armbian linux 链接蓝牙</h5><p>耳机的地址：A8:4D:4A:FE:XX:XX</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">7. 运行sudo armbian-config，设置时区，配置连接wifi网络。完成后退出armbian-config，然后按照MaxGo的教程修改apt源为国内源，https://www.right.com.cn/forum/thread-342558-1-1.html 修改国内源完成后，分别执行sudo update和sudo upgrade更新系统。更新完毕后sudo reboot重启。</span><br><span class="line"></span><br><span class="line">8. 重启后，继续ssh连接，然后执行sudo armbian-config，进去后选择Network，接着选择BT Install，耐心等待蓝牙组件安装完毕，然后退出。</span><br><span class="line"></span><br><span class="line">9. 接着执行sudo apt install pulseaudio-module-bluetooth 安装pulseaudio组件。安装完成后，分别执行sudo killall pulseaudio和pulseaudio --start启动pulseaudio服务。</span><br><span class="line"></span><br><span class="line">10. 开始进入蓝牙连接阶段，首先执行sudo hciconfig -a查看蓝牙控制器信息，确认无误后，执行sudo hciconfig hci0 up打开蓝牙控制器，然后执行sudo bluetoothctl打开蓝牙管理器。</span><br><span class="line"></span><br><span class="line">11. 先后执行power on，discoverable on，agent on，然后执行scan on搜集周围的蓝牙设备，记录下要连接的设备地址后，执行trust &lt;设备地址&gt;信任设备，然后再执行pair &lt;设备地址&gt;配对，此时，要配对的设备上可能会弹出提示，点确认。</span><br><span class="line"></span><br><span class="line">12. 如以上步骤都没有问题，则执行connect &lt;设备地址&gt;，稍候即可顺利连接蓝牙，可以运行info &lt;设备地址&gt;确认状态。</span><br></pre></td></tr></table></figure><p>不成功。连上之后又自动断开，找不到对应的声卡设备</p>]]></content>
      
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 斐讯 </tag>
            
            <tag> 蓝牙 </tag>
            
            <tag> 盒子 </tag>
            
            <tag> 命令 </tag>
            
            <tag> armbian </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/11/02/hello-world/"/>
      <url>/2020/11/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
